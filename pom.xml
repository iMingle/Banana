<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.mingle</groupId>
  <artifactId>banana</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>banana</name>
  <url>http://maven.apache.org</url>
  
  <properties>
      <spring.group>org.springframework</spring.group>
      <spring.version>4.1.7.RELEASE</spring.version>
      <hibernate.group>org.hibernate</hibernate.group>
  </properties>
  
  <dependencies>
  	<!-- Java Standard Tag Library -->
  	<dependency>
		<groupId>javax.servlet.jsp.jstl</groupId>
		<artifactId>jstl-api</artifactId>
		<version>1.2-rev-1</version>
	</dependency>
	<!-- An implementation of the JSP Standard Tag Library -->
	<dependency>
		<groupId>taglibs</groupId>
		<artifactId>standard</artifactId>
		<version>1.1.2</version>
	</dependency>
	<!-- 单元测试 -->
    <dependency>
		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
		<version>4.12</version>
		<scope>test</scope>
	</dependency>
	<!-- Mock objects library for java -->
	<dependency>
		<groupId>org.mockito</groupId>
		<artifactId>mockito-core</artifactId>
		<version>2.0.28-beta</version>
		<scope>test</scope>
	</dependency>
	<!-- Mock objects library for java -->
	<dependency>
	   <groupId>org.mockito</groupId>
	   <artifactId>mockito-all</artifactId>
	   <version>2.0.2-beta</version>
	   <scope>test</scope>
	</dependency>
	<!-- mysql驱动 -->
	<dependency>
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
		<version>5.1.34</version>
	</dependency>
	<!-- Simple API for XML -->
	<dependency>
		<groupId>sax</groupId>
		<artifactId>sax</artifactId>
		<version>2.0.1</version>
	</dependency>
	<!-- struts -->
	<dependency>
		<groupId>struts</groupId>
		<artifactId>struts</artifactId>
		<version>1.0.2</version>
	</dependency>
	<!-- A complete, Java-based solution for accessing, manipulating, and outputting XML data -->
	<dependency>
		<groupId>org.jdom</groupId>
		<artifactId>jdom</artifactId>
		<version>2.0.2</version>
	</dependency>
	<!-- Spring Context -->
	<dependency>
		<groupId>${spring.group}</groupId>
		<artifactId>spring-context</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<!-- Spring AOP -->
	<dependency>
		<groupId>${spring.group}</groupId>
		<artifactId>spring-aop</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<!-- Spring Aspects -->
	<dependency>
		<groupId>${spring.group}</groupId>
		<artifactId>spring-aspects</artifactId>
		<version>${spring.version}</version>
    </dependency>
	<!-- Spring JDBC -->
	<dependency>
		<groupId>${spring.group}</groupId>
		<artifactId>spring-jdbc</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<!-- Spring Object/Relational Mapping -->
	<dependency>
		<groupId>${spring.group}</groupId>
		<artifactId>spring-orm</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<!-- Spring test -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-test</artifactId>
		<version>${spring.version}</version>
    </dependency>
	<!-- Spring Web MVC -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-webmvc</artifactId>
		<version>${spring.version}</version>
    </dependency>
    <!-- The core O/RM functionality as provided by Hibernate -->
    <dependency>
		<groupId>${hibernate.group}</groupId>
		<artifactId>hibernate-core</artifactId>
		<version>5.0.0.CR2</version>
	</dependency>
	<!-- Hibernate O/RM implementation of the JPA specification -->
    <dependency>
		<groupId>${hibernate.group}</groupId>
		<artifactId>hibernate-entitymanager</artifactId>
		<version>5.0.0.CR2</version>
	</dependency>
	<!-- Hibernate's Bean Validation (JSR-303) reference implementation -->
    <dependency>
		<groupId>${hibernate.group}</groupId>
		<artifactId>hibernate-validator</artifactId>
		<version>5.2.0.CR1</version>
	</dependency>
	<!-- Annotations metadata for Hibernate -->
    <dependency>
		<groupId>${hibernate.group}</groupId>
		<artifactId>hibernate-annotations</artifactId>
		<version>3.5.6-Final</version>
	</dependency>
    
	<!-- The AspectJ weaver introduces advices to java classes -->
	<dependency>
		<groupId>org.aspectj</groupId>
		<artifactId>aspectjweaver</artifactId>
		<version>1.8.6</version>
	</dependency>
	<!-- The runtime needed to execute a program using AspectJ -->
	<dependency>
		<groupId>org.aspectj</groupId>
		<artifactId>aspectjrt</artifactId>
		<version>1.8.6</version>
	</dependency>
	<!-- Code generation library with shaded ASM dependecies -->
	<dependency>
		<groupId>cglib</groupId>
		<artifactId>cglib-nodep</artifactId>
		<version>3.1</version>
	</dependency>
	<!-- The javax.inject API -->
	<dependency>
		<groupId>javax.inject</groupId>
		<artifactId>javax.inject</artifactId>
		<version>1</version>
	</dependency>
	<!-- Apache Commons DBCP software implements Database Connection Pooling -->
	<dependency>
		<groupId>org.apache.commons</groupId>
		<artifactId>commons-dbcp2</artifactId>
		<version>2.1</version>
	</dependency>
	<!-- Core Jackson abstractions, basic JSON streaming API implementation -->
	<dependency>
		<groupId>com.fasterxml.jackson.core</groupId>
		<artifactId>jackson-core</artifactId>
		<version>2.6.0</version>
	</dependency>
	<!-- Core annotations used for value types, used by Jackson data binding package -->
	<dependency>
		<groupId>com.fasterxml.jackson.core</groupId>
		<artifactId>jackson-annotations</artifactId>
		<version>2.6.0</version>
	</dependency>
	<!-- General data-binding functionality for Jackson: works on core streaming API -->
	<dependency>
		<groupId>com.fasterxml.jackson.core</groupId>
		<artifactId>jackson-databind</artifactId>
		<version>2.6.0</version>
	</dependency>
	<!-- The Apache Log4j Implementation -->
	<dependency>
		<groupId>org.apache.logging.log4j</groupId>
		<artifactId>log4j-core</artifactId>
		<version>2.3</version>
	</dependency>
  </dependencies>
  
  <build>
	<finalName>banana</finalName>
  </build>
</project>
